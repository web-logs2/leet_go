package 排列组合

/**
题目：
给你一个整数 n ，统计并返回各位数字都不同的数字 x 的个数，其中 0 <= x < 10^n 。

思路：排列组合 T = O(n) S = O(1)
首先考虑两种边界情况：
	当 n = 0 时，0≤x<1，x 只有 1 种选择，即 0。
	当 n = 1 时，0≤x<10，x 有 10 种选择，即 0∼9。
	当 n = 2 时，0≤x<100，x 的选择可以由两部分构成：只有一位数的 x 和有两位数的 x。只有一位数的 x 可以由上述的边界情况计算。
有两位数的 x 可以由组合数学进行计算：第一位的选择有 9 种，即 1∼9，第二位的选择也有 9 种，即 0∼9 中除去第一位的选择。
即9x9,类似的3位数：9x9x8，以此类推。。。

	更一般地，含有 d （2≤d≤10）位数的各位数字都不同的数字 x 的个数可以由公式 9x9x8x7x6...d位相乘计算。
	再加上 d=1 的各位数字都不同的数字 x 的个数10个，即可得到答案。
*/
func countNumbersWithUniqueDigits(n int) int {
	if n == 0 {
		return 1
	}
	if n == 1 {
		return 10
	}
	ans, cur := 10, 9         //cur表示第一位的9种选择 1-9
	for i := 2; i <= n; i++ { //从第二位开始算，减去0-9种的第一位的1种选择，也是9种
		cur *= 10 - i + 1
		ans += cur
	}
	return ans
}
