package 质因子__位运算

/*
题目：
给定一个整数 n ，返回 n! 结果中尾随零的数量。
提示 n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1

思路：
对于 n! 中的质因子 p 的个数：
    首先1-n个数中p的倍数，分别贡献一个 ，共 n/p 个
    其次1-n个数中p^2的倍数，分别贡献2个，但是其中一个与p的倍数重复了，所以也算一个, 共 n/p^2 个
    。。。以此类推得

质因子 n! 中 包含的 质因子p的个数 = ∑(n/p^k) k =1, 2, 3...., 所以p 越大，个数越少
所以 5的质因子个数 少于 2的个数
*/
func trailingZeroes(n int) (ans int) {
	for n > 0 {
		ans += n / 5
		n /= 5
	}
	return ans
}
